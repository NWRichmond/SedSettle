10  REM ** OPERATING SYSTEM FOR SETTLING TUBE: RAPID SEDIMENT ANALYZER    **
20  REM **   UNIVERSITY OF MAINE, DEPARTMENT OF GEOLOGICAL SCIENCES       **
30  REM **                 COMPLETED MAY 27, 1988                         **
40  REM **     FOR INSTRUCTIONS SEE MANUAL, USE <10 GM CLEAN SAND         **
50  REM **                                                                **
60  REM ** DANIEL F. BELKNAP :  DESIGN AND SOFTWARE                       **
70  REM ** PAUL H. KELLEY :     CONSTRUCTION, METTLER INTERFACE, SOFTWARE **
80  REM ** DONALD H.W. ROBBINS: CONSTRUCTION, DEBUGGING AND CALIBRATION   **
90  REM ** PAUL S. BLOOD:       SOFTWARE AND DEBUGGING, CONSTRUCTION      **
92  REM
93  REM  !!!! OPERATIONAL TEMPERATURE 20.5 TO 30, OTHERWISE CHANGE I>1000 !!!!
94  REM  !!!! CHANGE TUBE LENGTH ON LINE 3080                             !!!!
95  REM  !!!! CHANGE SCALE FACTOR FOR PRINTOUT X SCALE (LOG) ON LINE 370  !!!!
96  REM  !!!! CHANGE NUMBER OF READINGS ON LINES 220, 540, AND 660        !!!!
97  REM  !!!! KOMAR FUDGE FACTORS EXPLAINED STARTING LINE 2910            !!!!
98 LPRINT CHR$(27); CHR$(15); CHR$(27); "0"; CHR$(27); "l"; CHR$(5); CHR$(27); "Q"; CHR$(136)
99 WIDTH LPRINT 136
100  DIM T(1000), T$(1000), DIAMM(25), RCM(25), KVEL(25), WT(1000)
110  DIM PHIT(25), Q$(1000), QQ$(1000), QQ(1000)
120  DEFSNG A-H, O-Z
130  REM  *** OPEN DISK FILE TO WRITE/SAVE RAM DATA IN REAL TIME ***
140  OPEN "R", #2, "c:RSA.DAT", 12
150  FIELD #2, 4 AS T$(I), 8 AS QQ$(I)
171 REM ***  Run delay subroutine for sample introduction lines 4000-5000
172 GOSUB 4000
160  REM  *** OPEN SERIAL COMMUNICATIONS FROM METTLER BALANCE ***
170  OPEN "COM1: 2400, E, 7, 1, LF" FOR RANDOM AS #1
180  REM  *** SET TIME TO 0 ***
190  TIME$ = "00:00:00"
200  REM  *** READ TIMES AND WEIGHTS FROM METTLER AT 0.6 SEC INTERVAL & SAVE ***
210  N = 0
220  FOR I = 1 TO 1000
230    T(I) = TIMER
240   INPUT #1, Q$(I)
250   T$(I) = MKS$(T(I))
260   QQ$(I) = MID$(Q$(I), 4, 8)
270   PUT #2, I
280    QQ(I) = VAL(QQ$(I))
290    X = 8 + 18 * QQ(I)
300   PRINT USING "###\\"; T(I); "|";
310   PRINT TAB(X); QQ(I)
320     IF I < 10 THEN 370
330     IF I >= N THEN 340 ELSE 390
340     LPRINT USING "###.#\\"; T(I); "|";
350     LPRINT TAB(X); "*";
360     LPRINT USING "##.##"; QQ(I)
370     N = I ^ 1.02
380  IF INKEY$ = "S" THEN 400
390 NEXT I
400 LPRINT "SEC    |-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|------"
410 LPRINT "       0                 1                 2      GRAMS      3                 4                 5                 6"
420  PRINT "UNIVERSITY OF MAINE RAPID SEDIMENT ANALYZER"
430 LPRINT "UNIVERSITY OF MAINE RAPID SEDIMENT ANALYZER"
440 LPRINT DATE$
450  INPUT "SAMPLE NUMBER: "; SAMPNO$
460  LPRINT "SAMPLE NUMBER: "; SAMPNO$
470  INPUT "WATER TEMP.: "; TEMP
480  LPRINT "WATER TEMP.: "; TEMP
490 PRINT "PLEASE BE PATIENT: THIS STEP TAKES 1-2 MINUTES"
500 PRINT "AS LONG AS THE B DRIVE RED LIGHT IS ON, ALL IS OK"
510 REM  *** GOSUB TO CALCULATE SETTLING VELOCITIES FOR 1/4 PHI INTERVALS ***
520  GOSUB 2900
530 REM  *** RETREIVE TIMES AND WEIGHTS FROM DISK FILE ***
540   FOR I = 1 TO 1000
550       GET #2, I
560       T(I) = CVS(T$(I))
570       QQ(I) = VAL(QQ$(I))
580   NEXT I
590 REM  *** COMPARE DATA TO EXPECTED PHI TIMES, SAVE AND PRINT ***
600 PHI = -1!
610 LPRINT "PHI", "TIME", "TIME", "INTERVAL"
620 LPRINT "   ", "EXPECT", "OBSERV", "WEIGHT: GRAMS"
630   WT(0) = 0
640 FOR J = 1 TO 21
650   LOW = PHIT(J) - .03
660   FOR I = 1 TO 1000
670      IF T(I) >= LOW THEN 690
680   NEXT I
690   T(J) = T(I)
700   QQ(J) = QQ(I)
710   WT(J) = QQ(J) - QQ(J - 1)
720   IF WT(J) < 0! THEN WT(J) = 0!
730   LPRINT USING "###.##       "; PHI; PHIT(J); T(J); WT(J)
740   PHI = PHI + .25
750 NEXT J
760 REM THIS IS MODIFIED FROM PROGRAM: "LGRAIN", GRAINSIZE STATISTICS
770 REM ** DANIEL F. BELKNAP, DEPT. GEOL. SCI. AND CENTER FOR MARINE STUDIES **
780 REM **   UNIVERSITY OF MAINE, ORONO, ME 04469 -  TEL. 207-581-2159   ***
790 REM **   FIRST PREPARED FALL 1982; LATEST REVISION JANUARY 13, 1986  ***
800 DIM G(100), F(100), L(100)
810 INPUT "DRY WEIGHT INPUT: "; ED
820 E = ED / 1.65
830 LPRINT "TOTAL IMMERSED WEIGHT: "; E
840 B = -1!
850 C = 4!
860 D = .25
870 N = 0
880 H = 0
890 FOR F = B TO C STEP D
900    N = N + 1
910    G(N) = WT(N)
920    F(N) = F
930    H = H + G(N)
940 NEXT F
950 LPRINT USING "\                  \###.####"; "CUM. TOT. WEIGHT: "; H
960 K = ((H / E) - 1) * 100
970 LPRINT USING "\                      \###.####"; "PERCENT WEIGHT ERROR: "; K
980 IF ABS(K) > 5 THEN 1000
990 GOTO 1005
1000 LPRINT "WEIGHT ERROR >5%"
1005 LPRINT CHR$(12)
1010 LPRINT
1015 LPRINT DATE$
1018 LPRINT "SAMPLE NUMBER: "; SAMPNO$
1020 LPRINT "CUMULATIVE CURVE OF DATA"
1030 LPRINT "WEIGHTS AS PERCENTAGE OF CUMULATIVE TOTAL"
1040 LPRINT "      0%                                               50%                                              100%"
1050 LPRINT "      |---------|---------|---------|---------|---------|---------|---------|---------|---------|---------|"
1060 LPRINT "PHI"
1070 N = 0
1080 HH = 0
1090 L(0) = 0
1100 FOR F = B TO C STEP D
1110    N = N + 1
1120    HH = HH + G(N)
1130    L(N) = (HH / H) * 100
1140    M = L(N) + 7
1150    LPRINT USING "+#.##"; F;
1160    LPRINT TAB(M); "*";
1165    LPRINT USING "###.##"; L(N)
1170 NEXT F
1180 LPRINT
1190 REM "NOW BEGINS COMPUTATION OF THE PHI PERCENTILES BY LINEAR"
1200 REM "INTERPOLATION (USE CAUTION FOR PHI INTERVALS >0.5)"
1210 N = 0
1220 L(0) = 0
1230 A(1) = 5
1240 A(2) = 16
1250 A(3) = 25
1260 A(4) = 50
1270 A(5) = 75
1280 A(6) = 84
1290 A(7) = 95
1300 FOR Q = 1 TO 7
1310   N = 0
1320     FOR F = B TO C STEP D
1330        N = N + 1
1340        M = N - 1
1350        F(M) = F(N) - D
1360        IF L(N) >= A(Q) THEN 1380
1370     NEXT F
1380   P(Q) = (D * (A(Q) - L(M)) / (L(N) - L(M))) + F(M)
1390   LPRINT USING "\    \##.####"; "PHI"; A(Q); "% ="; P(Q)
1400 NEXT Q
1410 REM "NOW BEGINS COMPUTATION OF FOLK-WARD STATISTICS"
1420 REM "************** MODE ****************"
1430 G(0) = 0
1440 N = 0
1450  FOR F = B TO C STEP D
1460   N = N + 1
1470   M = N - 1
1480   IF G(N) < G(M) THEN 1500
1490 NEXT F
1500 LPRINT USING "\        \###.####"; "MODE="; F(M); " PHI"; L(M); " CUM WT%"
1510 Z = (C - B) / D
1520 FOR F = N TO Z
1530    N = N + 1
1540    M = N - 1
1550    IF G(N) >= G(M) THEN 1580
1560 NEXT F
1570 GOTO 1660
1580 FOR F = N TO Z
1590    N = N + 1
1600    M = N - 1
1610    IF G(N) <= G(M) THEN 1640
1620 NEXT F
1630 GOTO 1520
1640 LPRINT USING "\        \###.####"; "MODE="; F(M); " PHI"; L(M); " CUM WT%"
1650 GOTO 1520
1660 LPRINT
1670 LPRINT "FOLLOWING ARE THE FOLK-WARD STATISTICAL PARAMETERS:"
1680 REM "*******************************************************"
1690 S(1) = (P(2) + P(4) + P(6)) / 3
1700 LPRINT USING "\                     \##.####"; "GRAPHIC MEAN: "; S(1);
1710 LPRINT TAB(40); ":",
1720 GOSUB 1910
1730 S(2) = (P(6) - P(2)) / 4 + (P(7) - P(1)) / 6.6
1740 LPRINT USING "\                     \##.####"; "INCL GRAPH STD DEV: "; S(2);
1750 LPRINT TAB(40); ":",
1760 GOSUB 2340
1770 S(3) = (P(2) + P(6) - (2 * P(4))) / (2 * (P(6) - P(2)))
1780 S(4) = (P(1) + P(7) - (2 * P(4))) / (2 * (P(7) - P(1)))
1790 S(5) = S(3) + S(4)
1800 LPRINT USING "\                     \##.####"; "INCL GRAPH SKEWNESS: "; S(5);
1810 LPRINT TAB(40); ":",
1820 GOSUB 2560
1830 S(6) = (P(7) - P(1)) / (2.44 * (P(5) - P(3)))
1840 LPRINT USING "\                     \##.####"; "GRAPHIC KURTOSIS: "; S(6);
1850 LPRINT TAB(40); ":",
1860 GOSUB 2720
1870 S(7) = S(6) / (1 + S(6))
1880 LPRINT USING "\                     \##.####"; "NORMALIZED KURTOSIS: "; S(7)
1885 GOSUB 3110
1886 LPRINT CHR$(12)
1888 LPRINT CHR$(27); "@"
1890 END
1900 REM "************ SUBROUTINE SIZE PARAMETERS ************"
1910 IF S(1) <= -8 THEN 2050
1920 IF S(1) <= -6 THEN 2070
1930 IF S(1) <= -2 THEN 2090
1940 IF S(1) <= -1 THEN 2110
1950 IF S(1) <= 0 THEN 2130
1960 IF S(1) <= 1 THEN 2150
1970 IF S(1) <= 2 THEN 2170
1980 IF S(1) <= 3 THEN 2190
1990 IF S(1) <= 4 THEN 2210
2000 IF S(1) <= 5 THEN 2230
2010 IF S(1) <= 6 THEN 2250
2020 IF S(1) <= 7 THEN 2270
2030 IF S(1) <= 8 THEN 2290
2040 IF S(1) > 8 THEN 2310
2050 LPRINT "BOULDERS"
2060 GOTO 2320
2070 LPRINT "COBBLES"
2080 GOTO 2320
2090 LPRINT "PEBBLES"
2100 GOTO 2320
2110 LPRINT "GRANULES"
2120 GOTO 2320
2130 LPRINT "VERY COARSE SAND"
2140 GOTO 2320
2150 LPRINT "COARSE SAND"
2160 GOTO 2320
2170 LPRINT "MEDIUM SAND"
2180 GOTO 2320
2190 LPRINT "FINE SAND"
2200 GOTO 2320
2210 LPRINT "VERY FINE SAND"
2220 GOTO 2320
2230 LPRINT "COARSE SILT"
2240 GOTO 2320
2250 LPRINT "MEDIUM SILT"
2260 GOTO 2320
2270 LPRINT "FINE SILT"
2280 GOTO 2320
2290 LPRINT "VERY FINE SILT"
2300 GOTO 2320
2310 LPRINT "CLAY"
2320 RETURN
2330 REM "************ SUBROUTINE SORTING LABELS ************"
2340 IF S(2) < .35 THEN 2410
2350 IF S(2) < .5 THEN 2430
2360 IF S(2) < .71 THEN 2450
2370 IF S(2) < 1 THEN 2470
2380 IF S(2) < 2 THEN 2490
2390 IF S(2) <= 4 THEN 2510
2400 IF S(2) > 4 THEN 2530
2410 LPRINT "VERY WELL SORTED"
2420 GOTO 2540
2430 LPRINT "WELL SORTED"
2440 GOTO 2540
2450 LPRINT "MODERATELY WELL SORTED"
2460 GOTO 2540
2470 LPRINT "MODERATELY SORTED"
2480 GOTO 2540
2490 LPRINT "POORLY SORTED"
2500 GOTO 2540
2510 LPRINT "VERY POORLY SORTED"
2520 GOTO 2540
2530 LPRINT "EXTREMELY POORLY SORTED"
2540 RETURN
2550 REM "************ SUBROUTINE SKEWNESS LABELS ************"
2560 IF S(5) > .3 THEN 2610
2570 IF S(5) > .1 THEN 2630
2580 IF S(5) > -.1 THEN 2650
2590 IF S(5) > -.3 THEN 2670
2600 IF S(5) >= -1 THEN 2690
2610 LPRINT "STRONGLY FINE SKEWED"
2620 GOTO 2700
2630 LPRINT "FINE SKEWED"
2640 GOTO 2700
2650 LPRINT "NEAR SYMMETRICAL"
2660 GOTO 2700
2670 LPRINT "COARSE SKEWED"
2680 GOTO 2700
2690 LPRINT "STRONGLY COARSE SKEWED"
2700 RETURN
2710 REM "************ SUBROUTINE KURTOSIS LABELS ************"
2720 IF S(6) < .67 THEN 2780
2730 IF S(6) < .9 THEN 2800
2740 IF S(6) < 1.11 THEN 2820
2750 IF S(6) < 1.5 THEN 2840
2760 IF S(6) <= 3 THEN 2860
2770 IF S(6) > 3 THEN 2880
2780 LPRINT "VERY PLATYKURTIC"
2790 GOTO 2890
2800 LPRINT "PLATYKURTIC"
2810 GOTO 2890
2820 LPRINT "MESOKURTIC"
2830 GOTO 2890
2840 LPRINT "LEPTOKURTIC"
2850 GOTO 2890
2860 LPRINT "VERY LEPTOKURTIC"
2870 GOTO 2890
2880 LPRINT "EXTREMELY LEPTOKURTIC"
2890 RETURN
2900 REM ************ SUBROUTINE SETTLING VELOCITIES ************
2910 REM      DENSITY AND VISCOSITY INTERPOLATION VALID FOR 16-30 C
2920 DENSE = 1.002878 - .000236 * TEMP
2930 KVISCO = 1.657 * EXP(-.0248 * TEMP)
2940 DYVISC = KVISCO / (DENSE * 100)
2950 DIAMM(0) = 2.37841423#
2960 FOR L = 1 TO 21
2970     DIAMM(L) = DIAMM(L - 1) / (SQR(SQR(2)))
2980     RCM(L) = DIAMM(L) * .05
2990     REM    GIBBS SETTLING EQUATION AFTER KOMAR, 1981
3000     GIBBSA = -3 * DYVISC
3010     GIBBSB = 9 * (DYVISC) ^ 2
3020     GIBBSC = 981 * RCM(L) ^ 2 * (DENSE * (2.65 - DENSE))
3030     GIBBSD = .015476 + .19841 * RCM(L)
3040     GIBBSE = DENSE * (.011607 + .14881 * RCM(L))
3050     REM    KOMAR CORRECTION FOR VELOCITY = 1.0269, BELOW
3060     KVEL(L) = 1.0269 * (GIBBSA + SQR(GIBBSB + GIBBSC * GIBBSD)) / GIBBSE
3070     REM    PHI SETTLING TIME = TUBE LENGTH/VELOCITY
3080     PHIT(L) = 203.3 / KVEL(L)
3090 NEXT L
3100 RETURN
3110 REM  ************** SUBROUTINE METHOD OF MOMENTS **********************
3120 LPRINT
3130 LPRINT "FOLLOWING ARE PARAMETERS BY THE METHOD OF MOMENTS:"
3140 N = 0
3150 FOR F = B TO C STEP D
3160     N = N + 1
3170     F(N) = F
3180     XX = XX + (F(N) * G(N))
3190     GG = GG + G(N)
3200 NEXT F
3210 MM = XX / GG
3220 N = 0
3230 FOR F = B TO C STEP D
3240     N = N + 1
3250     F(N) = F
3260     PP = PP + (G(N) * (F(N) - MM) ^ 2)
3270     QQ = QQ + (G(N) * (F(N) - MM) ^ 3)
3280     RR = RR + (G(N) * (F(N) - MM) ^ 4)
3290 NEXT F
3300 REM    *** SECOND MOMENT: VARIANCE  ***
3310 M2 = PP / GG
3320 DD = SQR(M2)
3330 REM    *** THIRD MOMENT: SKEWNESS = M3/(M2^1.5)  ***
3340 M3 = QQ / GG
3350 SS = M3 / (M2 ^ 1.5)
3360 REM    *** FOURTH MOMENT: KURTOSIS = M4/(M2^2)  ***
3370 M4 = RR / GG
3380 KK = M4 / (M2 ^ 2)
3390 LPRINT USING "\                  \##.####"; "MEAN X=             "; MM
3400 LPRINT USING "\                  \##.####"; "VARIANCE=           "; M2
3405 LPRINT USING "\                  \##.####"; "SKEWNESS=           "; SS
3410 LPRINT USING "\                  \##.####"; "STD DEVIATION=      "; DD
3420 LPRINT USING "\                  \##.####"; "KURTOSIS=           "; KK
3430 LPRINT
3440 LPRINT
3450 END

4000 REM   *** START DELAY SEQUENCE SUBROUTINE   ***
4010    FOR I = 1 TO 10
4020     SOUND 500, 18.2
4030     SOUND 32767, 18.2
4040     NEXT
4050     FOR I = 1 TO 4
4060     SOUND 700, 18.2
4070     SOUND 32767, 18.2
4080     NEXT
4090     SOUND 1000, 36.4
5000     SOUND 32767, 1
5010     RETURN

